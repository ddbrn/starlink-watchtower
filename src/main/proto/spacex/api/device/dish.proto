syntax = "proto3";

package SpaceX.API.Device;

option java_package = "com.spacex.api.device";
option java_outer_classname = "DishProto";
option java_multiple_files = true;

import "spacex/api/device/common.proto";
import "spacex/api/device/dish_config.proto";
import "spacex/api/device/rssi_scan.proto";
import "spacex/api/satellites/network/ut_disablement_codes.proto";
import "spacex/api/telemetron/integrations/ut_pop_link_report.proto";

message DishStowRequest {
  bool unstow = 1;
}

message DishStowResponse {
}

message DishGetContextRequest {
}

message DishGetContextResponse {
  .SpaceX.API.Device.DeviceInfo device_info = 1;
  .SpaceX.API.Device.DeviceState device_state = 7;
  float obstruction_fraction = 2;
  float obstruction_time = 20;
  float obstruction_valid_s = 3;
  bool obstruction_current = 12;
  uint32 cell_id = 4;
  uint32 pop_rack_id = 5;
  uint32 initial_satellite_id = 8;
  uint32 initial_gateway_id = 9;
  bool on_backup_beam = 10;
  float seconds_to_slot_end = 6;
  bool debug_telemetry_enabled = 11;
  float pop_ping_drop_rate_15s_mean = 13;
  float pop_ping_latency_ms_15s_mean = 14;
  float seconds_since_last_1s_outage = 15;
  float seconds_since_last_2s_outage = 16;
  float seconds_since_last_5s_outage = 17;
  float seconds_since_last_15s_outage = 18;
  float seconds_since_last_60s_outage = 19;
  bool outage_1s_within_1h = 23;
  bool outage_2s_within_1h = 24;
  bool outage_5s_within_1h = 25;
  .SpaceX.API.Satellites.Network.UtDisablementCode disablement_code = 21;
  float ku_mac_active_ratio = 22;
}

message DishOutage {
  enum Cause {
    UNKNOWN = 0;
    BOOTING = 1;
    STOWED = 2;
    THERMAL_SHUTDOWN = 3;
    NO_SCHEDULE = 4;
    NO_SATS = 5;
    OBSTRUCTED = 6;
    NO_DOWNLINK = 7;
    NO_PINGS = 8;
    ACTUATOR_ACTIVITY = 9;
    CABLE_TEST = 10;
    SLEEPING = 11;
    MOVING_WHILE_NOT_ALLOWED = 12;
  }

  .SpaceX.API.Device.DishOutage.Cause cause = 1;
  int64 start_timestamp_ns = 2;
  uint64 duration_ns = 3;
  bool did_switch = 4;
}

message DishGetHistoryResponse {
  reserved 1005;
  reserved 1006;
  reserved 1007;
  reserved 1008;
  uint64 current = 1;
  repeated float pop_ping_drop_rate = 1001;
  repeated float pop_ping_latency_ms = 1002;
  repeated float downlink_throughput_bps = 1003;
  repeated float uplink_throughput_bps = 1004;
  repeated .SpaceX.API.Device.DishOutage outages = 1009;
  repeated float power_in = 1010;
}

message DishGetStatusResponse {
  reserved 1001;
  reserved 1006;
  reserved 1013;
  .SpaceX.API.Device.DeviceInfo device_info = 1;
  .SpaceX.API.Device.DeviceState device_state = 2;
  .SpaceX.API.Device.DishAlerts alerts = 1005;
  .SpaceX.API.Device.DishOutage outage = 1014;
  .SpaceX.API.Device.DishGpsStats gps_stats = 1015;
  float seconds_to_first_nonempty_slot = 1002;
  float pop_ping_drop_rate = 1003;
  float downlink_throughput_bps = 1007;
  float uplink_throughput_bps = 1008;
  float pop_ping_latency_ms = 1009;
  .SpaceX.API.Device.DishObstructionStats obstruction_stats = 1004;
  bool stow_requested = 1010;
  float boresight_azimuth_deg = 1011;
  float boresight_elevation_deg = 1012;
  int32 eth_speed_mbps = 1016;
  .SpaceX.API.Device.UserMobilityClass mobility_class = 1017;
  bool is_snr_above_noise_floor = 1018;
  .SpaceX.API.Device.DishReadyStates ready_states = 1019;
  .SpaceX.API.Device.UserClassOfService class_of_service = 1020;
  .SpaceX.API.Device.SoftwareUpdateState software_update_state = 1021;
  bool swupdate_reboot_ready = 1030;
  .SpaceX.API.Device.RebootReason reboot_reason = 1032;
  .SpaceX.API.Device.SoftwareUpdateStats software_update_stats = 1026;
  .SpaceX.API.Device.AlignmentStats alignment_stats = 1027;
  bool is_snr_persistently_low = 1022;
  .SpaceX.API.Device.HasActuators has_actuators = 1023;
  .SpaceX.API.Satellites.Network.UtDisablementCode disablement_code = 1024;
  .SpaceX.API.Telemetron.Public.Integrations.RateLimitReason dl_bandwidth_restricted_reason = 1044;
  .SpaceX.API.Telemetron.Public.Integrations.RateLimitReason ul_bandwidth_restricted_reason = 1045;
  bool has_signed_cals = 1025;
  .SpaceX.API.Device.DishConfig config = 2000;
  .SpaceX.API.Device.InitializationDurationSeconds initialization_duration_seconds = 1028;
  bool is_cell_disabled = 1029;
  int32 seconds_until_swupdate_reboot_possible = 1031;
  bool high_power_test_mode = 1033;
  repeated string connected_routers = 1040;
  .SpaceX.API.Device.PLCStats plc_stats = 1041;
  bool is_moving_fast_persisted = 1042;
  .SpaceX.API.Device.DishUpsuStats upsu_stats = 1043;
  float phy_rx_beam_snr_avg = 1046;
  float t_center = 1047;
}

message DishGetObstructionMapRequest {
}

message DishGetObstructionMapResponse {
  uint32 num_rows = 1;
  uint32 num_cols = 2;
  repeated float snr = 3;
  float min_elevation_deg = 4;
  float max_theta_deg = 5;
  .SpaceX.API.Device.ObstructionMapReferenceFrame map_reference_frame = 6;
}

message DishAlerts {
  reserved "moving_fast_while_not_aviation";
  reserved 13;
  bool motors_stuck = 1;
  bool thermal_throttle = 3;
  bool thermal_shutdown = 2;
  bool mast_not_near_vertical = 5;
  bool unexpected_location = 4;
  bool slow_ethernet_speeds = 6;
  bool slow_ethernet_speeds_100 = 18;
  bool roaming = 7;
  bool install_pending = 8;
  bool is_heating = 9;
  bool power_supply_thermal_throttle = 10;
  bool is_power_save_idle = 11;
  bool moving_while_not_mobile = 12;
  bool moving_too_fast_for_policy = 15;
  bool dbf_telem_stale = 14;
  bool low_motor_current = 16;
  bool lower_signal_than_predicted = 17;
  bool obstruction_map_reset = 19;
}

message DishReadyStates {
  bool cady = 1;
  bool scp = 2;
  bool l1l2 = 3;
  bool xphy = 4;
  bool aap = 5;
  bool rf = 6;
}

message DishGpsStats {
  bool gps_valid = 1;
  uint32 gps_sats = 2;
  bool no_sats_after_ttff = 3;
  bool inhibit_gps = 4;
}

message SoftwareUpdateStats {
  .SpaceX.API.Device.SoftwareUpdateState software_update_state = 1;
  float software_update_progress = 2;
  bool update_requires_reboot = 3;
  int64 reboot_scheduled_utc_time = 4;
}

message AlignmentStats {
  .SpaceX.API.Device.HasActuators has_actuators = 1;
  .SpaceX.API.Device.ActuatorState actuator_state = 2;
  float tilt_angle_deg = 3;
  float boresight_azimuth_deg = 4;
  float boresight_elevation_deg = 5;
  float desired_boresight_azimuth_deg = 8;
  float desired_boresight_elevation_deg = 9;
  .SpaceX.API.Device.AttitudeEstimationState attitude_estimation_state = 6;
  float attitude_uncertainty_deg = 7;
}

message DishObstructionStats {
  reserved "wedge_fraction_obstructed";
  reserved "wedge_abs_fraction_obstructed";
  reserved 2;
  reserved 3;
  reserved 1006;
  bool currently_obstructed = 5;
  float fraction_obstructed = 1;
  float time_obstructed = 9;
  float valid_s = 4;
  uint32 patches_valid = 10;
  float avg_prolonged_obstruction_duration_s = 6;
  float avg_prolonged_obstruction_interval_s = 7;
  bool avg_prolonged_obstruction_valid = 8;
}

message DishUpsuStats {
  uint64 app_version = 2;
  uint64 boot_version = 3;
  uint64 rom_version = 4;
  int64 uptime = 5;
  float dish_power = 6;
  float router_power = 7;
  bool force_dev_signed_allowed = 8;
  bool debug_port_locked = 9;
  bool stsafe_certs_locked = 10;
  bool stsafe_keys_locked = 11;
  uint32 g0_locked = 12;
  uint32 g0_firmware_version = 13;
  int32 board_rev = 14;
  uint32 g0_board_id = 15;
}

message InitializationDurationSeconds {
  int32 attitude_initialization = 1;
  int32 burst_detected = 2;
  int32 ekf_converged = 3;
  int32 first_cplane = 4;
  int32 first_pop_ping = 5;
  int32 gps_valid = 6;
  int32 initial_network_entry = 7;
  int32 network_schedule = 8;
  int32 rf_ready = 9;
  int32 stable_connection = 10;
}

message DishAuthenticateResponse {
  .SpaceX.API.Device.ChallengeResponse dish = 2;
}

message SelfTestRequest {
  bool detailed = 1;
}

message SelfTestResponse {
  bool passed = 1;
  string report = 2;
}

message SetTestModeRequest {
  enum RfMode {
    RX = 0;
    IDLE = 1;
    TX = 2;
    CAL = 3;
    USER = 4;
    NORMAL = 420;
  }

  .SpaceX.API.Device.SetTestModeRequest.RfMode rf_mode = 1;
  bool disable_loss_of_comm_fdir = 1001;
  bool enable_rules_override = 1002;
}

message SetTestModeResponse {
}

message DishSetConfigRequest {
  .SpaceX.API.Device.DishConfig dish_config = 1;
}

message DishSetConfigResponse {
  .SpaceX.API.Device.DishConfig updated_dish_config = 1;
  string error = 2;
}

message DishGetConfigRequest {
}

message DishGetConfigResponse {
  .SpaceX.API.Device.DishConfig dish_config = 1;
}

message DishInhibitGpsRequest {
  bool inhibit_gps = 1;
}

message DishInhibitGpsResponse {
  bool inhibit_gps = 1;
}

message DishGetDataRequest {
  uint32 id = 1;
}

message DishClearObstructionMapRequest {
}

message DishClearObstructionMapResponse {
}

message DishActivateRssiScanRequest {
  .SpaceX.API.Device.DishActivateRssiScan scan_query = 1;
}

message DishActivateRssiScanResponse {
  bool success = 1;
}

message DishGetRssiScanResultRequest {
}

message DishGetRssiScanResultResponse {
  .SpaceX.API.Device.DishGetRssiScanResult result = 1;
}

message DishFactoryResetRequest {
  bool app_reset = 1;
}

message DishFactoryResetResponse {
}

message ResetButtonRequest {
  bool pressed = 1;
}

message ResetButtonResponse {
}

message PLCStats {
  enum ProtocolRevision {
    REV_D = 0;
  }

  bool receiving_plc = 1;
  uint32 average_time_to_empty = 2;
  uint32 average_time_to_full = 3;
  uint32 battery_health = 4;
  uint32 hardware_revision_id = 5;
  bool permanent_failure = 6;
  .SpaceX.API.Device.PLCPortStats port_1_stats = 7;
  .SpaceX.API.Device.PLCPortStats port_2_stats = 8;
  .SpaceX.API.Device.PLCPortStats port_3_stats = 9;
  .SpaceX.API.Device.PLCStats.ProtocolRevision plc_revision = 10;
  bool safety_mode_active = 11;
  uint32 state_of_charge = 12;
  uint32 thermal_throttle_level = 13;
}

message PLCPortStats {
  enum PortStatus {
    INACTIVE = 0;
    CHARGING = 1;
    DISCHARGING = 2;
    MOISTURE_DETECTED = 3;
  }

  uint32 power = 1;
  .SpaceX.API.Device.PLCPortStats.PortStatus status = 2;
}

enum UserMobilityClass {
  STATIONARY = 0;
  NOMADIC = 1;
  MOBILE = 2;
}

enum ObstructionMapReferenceFrame {
  FRAME_UNKNOWN = 0;
  FRAME_EARTH = 1;
  FRAME_UT = 2;
}

enum SoftwareUpdateState {
  SOFTWARE_UPDATE_STATE_UNKNOWN = 0;
  IDLE = 1;
  FETCHING = 2;
  PRE_CHECK = 3;
  WRITING = 4;
  POST_CHECK = 5;
  REBOOT_REQUIRED = 6;
  DISABLED = 7;
  FAULTED = 8;
}

enum UserClassOfService {
  UNKNOWN_USER_CLASS_OF_SERVICE = 0;
  CONSUMER = 1;
  BUSINESS = 2;
  BUSINESS_PLUS = 3;
  COMMERCIAL_AVIATION = 4;
}

enum HasActuators {
  HAS_ACTUATORS_UNKNOWN = 0;
  HAS_ACTUATORS_YES = 1;
  HAS_ACTUATORS_NO = 2;
}

enum ActuatorState {
  ACTUATOR_STATE_IDLE = 0;
  ACTUATOR_STATE_FULL_TILT = 1;
  ACTUATOR_STATE_ROTATE = 2;
  ACTUATOR_STATE_TILT = 3;
  ACTUATOR_STATE_UNWRAP_POSITIVE = 4;
  ACTUATOR_STATE_UNWRAP_NEGATIVE = 5;
  ACTUATOR_STATE_TILT_TO_STOWED = 6;
  ACTUATOR_STATE_FAULTED = 7;
  ACTUATOR_STATE_WAIT_TIL_STATIC = 8;
  ACTUATOR_STATE_DRIVE_TO_MOBILE_POSITION = 9;
  ACTUATOR_STATE_MOBILE_WAIT = 10;
}

enum AttitudeEstimationState {
  FILTER_RESET = 0;
  FILTER_UNCONVERGED = 1;
  FILTER_CONVERGED = 2;
  FILTER_FAULTED = 3;
  FILTER_INVALID = 4;
}

enum RebootReason {
  REBOOT_REASON_NONE = 0;
  REBOOT_REASON_MANUAL = 1;
  REBOOT_REASON_LOSS_OF_COMM = 2;
  REBOOT_REASON_SWUPDATE_NOW = 3;
  REBOOT_REASON_SWUPDATE_SCHEDULED = 4;
  REBOOT_REASON_APP = 5;
  REBOOT_REASON_EMC = 6;
  REBOOT_REASON_FACTORY_RESET = 7;
  REBOOT_REASON_TEST_CASE = 8;
  REBOOT_REASON_THERMAL_POWER_CUT = 9;
  REBOOT_REASON_CRITICAL_PROCESS_DIED = 10;
  REBOOT_REASON_NO_RF_READY = 11;
  REBOOT_REASON_POSTPONED_LOSS_OF_COMM = 12;
  REBOOT_REASON_SWUPDATE_STATIONARY = 13;
  REBOOT_REASON_AAP_CRASH = 14;
  REBOOT_REASON_XP70_SACS = 15;
  REBOOT_REASON_INE_FAILED = 16;
}

enum DishState {
  UNKNOWN = 0;
  CONNECTED = 1;
  SEARCHING = 2;
  BOOTING = 3;
}

